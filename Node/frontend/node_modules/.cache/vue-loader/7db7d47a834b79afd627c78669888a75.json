{"remainingRequest":"/home/alexis/Documents/UQAC/Systèmes Répartis/MySkype/Node/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/alexis/Documents/UQAC/Systèmes Répartis/MySkype/Node/frontend/src/components/ConversationList.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/alexis/Documents/UQAC/Systèmes Répartis/MySkype/Node/frontend/src/components/ConversationList.vue","mtime":1540666210419},{"path":"/home/alexis/Documents/UQAC/Systèmes Répartis/MySkype/Node/frontend/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/alexis/Documents/UQAC/Systèmes Répartis/MySkype/Node/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1540665777498},{"path":"/home/alexis/Documents/UQAC/Systèmes Répartis/MySkype/Node/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n\nimport axios from 'axios'\nexport default {\n    name: \"ConversationList\",\n    data() {\n        return {\n            response: [],\n            errors: []\n        }\n    },\n    mounted() {\n        axios.get(`api/conversation`)\n            .then(response => {\n                this.response = response.data\n            })\n            .catch(error => {\n                this.errors.push(error)\n            })\n    }\n\n}\n",{"version":3,"sources":["ConversationList.vue"],"names":[],"mappings":";;;;;;;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","file":"ConversationList.vue","sourceRoot":"src/components","sourcesContent":["<template>\n    <div class=\"ConversationList\">\n        {{response}}\n    </div>\n</template>\n\n<script>\n    import axios from 'axios'\n    export default {\n        name: \"ConversationList\",\n        data() {\n            return {\n                response: [],\n                errors: []\n            }\n        },\n        mounted() {\n            axios.get(`api/conversation`)\n                .then(response => {\n                    this.response = response.data\n                })\n                .catch(error => {\n                    this.errors.push(error)\n                })\n        }\n\n    }\n</script>\n\n<style scoped>\n\n</style>"]}]}