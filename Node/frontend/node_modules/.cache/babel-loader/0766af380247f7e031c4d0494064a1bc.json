{"remainingRequest":"/home/alexis/Documents/UQAC/Systèmes Répartis/MySkype/Node/frontend/node_modules/babel-loader/lib/index.js!/home/alexis/Documents/UQAC/Systèmes Répartis/MySkype/Node/frontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/alexis/Documents/UQAC/Systèmes Répartis/MySkype/Node/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/alexis/Documents/UQAC/Systèmes Répartis/MySkype/Node/frontend/src/components/ConversationList.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/alexis/Documents/UQAC/Systèmes Répartis/MySkype/Node/frontend/src/components/ConversationList.vue","mtime":1540669704874},{"path":"/home/alexis/Documents/UQAC/Systèmes Répartis/MySkype/Node/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1540665777498},{"path":"/home/alexis/Documents/UQAC/Systèmes Répartis/MySkype/Node/frontend/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/alexis/Documents/UQAC/Systèmes Répartis/MySkype/Node/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1540665777498},{"path":"/home/alexis/Documents/UQAC/Systèmes Répartis/MySkype/Node/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport axios from 'axios';\nexport default {\n  name: \"ConversationList\",\n  data: function data() {\n    return {\n      response: [],\n      errors: []\n    };\n  },\n  mounted: function mounted() {\n    var _this = this;\n\n    axios.get(\"api/conversation\").then(function (response) {\n      _this.response = response.data;\n    }).catch(function (error) {\n      _this.errors.push(error);\n    });\n  }\n};",{"version":3,"sources":["ConversationList.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwCA,OAAA,KAAA,MAAA,OAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,kBADA;AAEA,EAAA,IAFA,kBAEA;AACA,WAAA;AACA,MAAA,QAAA,EAAA,EADA;AAEA,MAAA,MAAA,EAAA;AAFA,KAAA;AAIA,GAPA;AAQA,EAAA,OARA,qBAQA;AAAA;;AACA,IAAA,KAAA,CAAA,GAAA,qBACA,IADA,CACA,UAAA,QAAA,EAAA;AACA,MAAA,KAAA,CAAA,QAAA,GAAA,QAAA,CAAA,IAAA;AACA,KAHA,EAIA,KAJA,CAIA,UAAA,KAAA,EAAA;AACA,MAAA,KAAA,CAAA,MAAA,CAAA,IAAA,CAAA,KAAA;AACA,KANA;AAOA;AAhBA,CAAA","sourcesContent":["<template>\n    <div class=\"ConversationList\">\n        <div class=\"container\">\n\n            <nav class=\"panel\">\n                <p class=\"panel-heading\">\n                    Conversations\n                </p>\n                <div class=\"panel-block\">\n                    <p class=\"control has-icons-left\">\n                        <input class=\"input is-small\" type=\"text\" placeholder=\"search\">\n                        <span class=\"icon is-small is-left\">\n                            <i class=\"fas fa-search\" aria-hidden=\"true\"></i>\n                        </span>\n                    </p>\n                </div>\n                <div v-for=\"conv in response\">\n                    <a class=\"panel-block\">\n                        <div class=\"media-left\">\n                            <figure class=\"image is-64x64\">\n                                <img src=\"https://bulma.io/images/placeholders/128x128.png\" alt=\"Image\">\n                            </figure>\n                        </div>\n                        <div class=\"media-content\">\n                            <div class=\"content\">\n                                <p>\n                                    <strong>{{ conv.name }}</strong>\n                                    <br>\n                                    {{ conv.messages[0] }}\n                                </p>\n                            </div>\n                        </div>\n                    </a>\n                </div>\n            </nav>\n        </div>\n    </div>\n</template>\n\n<script>\n    import axios from 'axios'\n\n    export default {\n        name: \"ConversationList\",\n        data() {\n            return {\n                response: [],\n                errors: []\n            }\n        },\n        mounted() {\n            axios.get(`api/conversation`)\n                .then(response => {\n                    this.response = response.data\n                })\n                .catch(error => {\n                    this.errors.push(error)\n                })\n        }\n\n    }\n</script>\n\n<style scoped>\n\n</style>"],"sourceRoot":"src/components"}]}